This file contains release notes for version 0.94 of Wood.New features since 0.93-----------------------Wood works in MCL-PPC 3.9. Files saved with earlier versions ofWood in MCL 2.0 or 3.0 can be read by Wood 0.94 in MCL-PPC.I have not tested that Wood 0.94 still works in MCL 3.0 or MCL 2.0.Hash tables are now converted to/from the MCL 2.0 representation.This means that a hash table that was saved in a Wood file byMCL 2.0.1 will be readable in MCL 3.0 or MCL-PPC 3.9 andvice-versa. It also means that a hash table that was writtenin a Wood file by MCL 3.0 and version 0.93 or earlier of Woodwill no longer read correctly. If you have this problem, askand I'll make a patch for you. Note that I'm referring tosaving a Common Lisp hash table, not the "hash tables" createdby p-make-hash-table, which are really a thin skin over btrees.You can p-store/p-load extended (16 bit character) strings.A Wood file can be opened read-only. As with any other disk file,multiple applications can open the same Wood file in read-only mode.Any attempt to write to a Wood file that was opened read-onlywill signal an error. See the :READ-ONLY-P keyword to OPEN-PHEAPin "wood.doc".Mod Histories-------------block-io-mcl.lisp;; 03/09/96 bill Eliminate LAP for ppc-targetbtrees.lisp;;; 03/26/96 bill  Don't use %schar in %btree-search-node, MCL-PPC type checks it.;;; 03/21/96 bill  Specify element-type of base-character to make-string calls;;;                Add an optional swap-space-in-k arg to time-btree-store & time-btree-readdisk-cache-accessors.lisp;; 03/20/96 bill Make work in MCL-PPCdisk-cache-inspector.lisp;; 03/21/96 bill %typed-uvref -> aref inside a lying declaration.disk-cache.lisp;; 03/27/96 bill Dylan changes add a :read-only-p keyword to open-disk-cachedisk-page-hash.lisp;; 03/21/96 bill (make-array ... :INITIAL-ELEMENT NIL) in make-disk-page-hash-table-vectorload-wood.lisp;; 03/21/96 bill  compile-and-load resignals any error it doesn't recognize;; 03/09/96 bill  say ccl::*.fasl-pathname* instead of ".fasl".persistent-heap.lisp;; 04/04/96 bill  Handle hash tables.;;                Revert p-load-header. New code renamed to p-load-arrayh.;; 03/29/96 bill  #+ppc-target for the new p-load-header def.;;                p-load-struct passes true value for the new struct-p;;                arg to p-load-gvector. This makes loading a struct;;                that references itself work again.;; 03/27/96 bill  :read-only-p keyword for open-pheap (from Dylan).;; 03/22/96 bill  Make it work on the PPC.;;                This mostly involved mapping the new typecodes to/from the old subtypes;;                and dealing with the change in complex array/vector headers.;;                New:;;                  *wood-subtype->ccl-subtag-table*, *ccl-subtag->wood-subtype-table*,;;                  p-store-arrayh;;                Changed:;;                  wood->ccl-subtype, ccl->wood-subtype,;;                  p-load-header, immediate-object-p, %p-store-object;; 03/21/96 bill  uvref-extended-string, uvset-extended-string and other support for 2-byte strings.;; 09/12/95 bill  setf method for p-stored?recovery.lisp;; 03/21/96 bill  (make-string ... :element-type 'base-character)split-lfun.lisp;; 03/20/96 bill  ppc-target codewood-gc.lisp;; 03/21/96 bill (make-string ... :element-type 'base-character)wood.docDocument the :read-only-p keyword to open-pheapwood.lisp;; 03/09/96 bill  say ccl::*.fasl-pathname* instead of ".fasl".woodequ.lisp;; 03/21/96 bill  add $v_xstr