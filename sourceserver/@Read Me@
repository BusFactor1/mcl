;;	Change History (most recent first):;;  1 2/9/95   akh  new file;;  (do not edit before this line!!)SourceServer is an application that allows development environments and other applications to access MPW Projector project management capabilities via Apple Events.  Development environments and applications have access to the full functionality of Projector including the ability to create project databases, as well as checking in and out individual files. Both MPW and other development environments can share the same project database using SourceServer. SourceServer is available on E.T.O. (Essentials - Tools - Objects), a CD-ROM subscripion series distributed by Apple through APDA.  (elsewhere?) See MPW projectordocumention for an overview of what Projector and, by implication, Sourceserver areall about.This interface to sourceserver was originally adapted from a version inuse by the Dylan team. It was created for a demo at WWDC and included in"Other goodies from Apple" on the MCL 2.0  CD. Since then it has beenimproved by the folks at RSTAR, Inc. and later by Digitool. It isstill full of bugs and glitches, but is useful if you are tolerant.Since the current users of this interface do not usually check out filesfor modification but rather check out read only and then make the files"modify read only" on the local disk, that mode of use has had more attention.There are two files in the sourceserver folder that need to be customized. Initialize-user.lispsets your user name and initials and the logical pathname translations for thesourceserver database and the file heirarchy on your local disk.The logical host for the  sourceserver database is "SSRemote". The hostfor the local files is "SSLocal". Initialize-projects.lisp sets the list of projects. The projects donot need to exist initially but an error will occur if one attempts tomount a  project that does not exist in the database. To try  out sourceserver edit these two files, thenload or execute the file "load-sourceserver.lisp" in the sourceserver folder.The version of the sourceserver application  in this folder is 1.0.1(are we allowed to distribute it - probably not). So tell people where toput it. The first four menu items on the SourceServer menu apply to the active (front most)window. If the active window corresponds to a file in the local directory of one of*all-projects* some or all of these menu items will be enabled."Checkout Active" is enabled if the corresponding project is mounted and the file is read-only on the local disk. It checks out the file for modification, preventing other  users from  modifying it."Checkin Active" is enabled if the project  is mounted and the file is modifiable on the local disk. It checks in the file and makes it read-only."ModR0 Active" is enabled if the file is read only. It makes the file modifiableon the local disk."Other Active" is always enabled and provides a variety of other options."Mount Projects" allows you to mount all projects or just some selected projects.Use shift click in the dialog to select multiple projects.Use "New Project" to create a new project. A dialog will ask for the name ofthe database file for the project. If the corresponding local directoryexists in "sslocal:", that will be used. If it doesnt exist, a dialog will let you create thelocal directory.To add a single file to a project, make its window active and choose"Checkin Active". A dialog will ask if you want to add it to the project.To add several files to a project use "New Project Files" in the submenu of"Other File". This will bring up a dialog that lists all the files in thechosen directory. The filter at the top can be used to select a subset ofthe files. The filter string is passed to the directory function so, forexample *.lisp will select all the .lisp files. (more here?).To delete a file from a project choose "Delete" in the submenu of "Other File".This just removes the file from the project database. It does not delete itfrom your local disk."Update Current Project" will get the most recent versions of all theproject  files from the sourceserver database. If any of the files aremodifiable on the local disk a dialog will ask if you want to move thelocal files to a merge directory or ??. Best to choose merge.The modified files will be moved to a directory like "hd:my-project merge0:"and the newer ones will replace them in the project directory.Then you can use "Merge Directories" to merge your changes with the newerfiles."Merge Directories" is used to merge a selected file in one directory with thecorrespondingly named file in another directory. In the dialog "Main dir:" isgenerally the local project directory, e.g. "SSlocal:project;" and "Merge dir:"is the directory containing those files that were moved to a merge directory,e.g. "SSlocal:project Merge0;".  Choosing the "List Files" button lists the contents of the merge directory. Select a file from the list, then click "Merge file"which  will open both versionsof the selected file and a dialog that controls the merge. (bug: either merge fileshould be disabled unless a file has been selected or the first file should beselected for you). "Merge Directories" can beused to merge files in any directories. They don't have to be directoriescontaining project files.If you attempt to modify a fred-window for a read-only file, a dialog will askwhether you want to make the buffer (and file) modifiable. This will happeneven if sourceserver is not loaded as long as the sourceserver folder isin the expected  place in the MCL folder.It may be the case that whereas this sourceserver interface supports projectheirarchies, MPW does not. So switching between MPW and MCL sourceserver for sourcecontrol of a heirarchical project may not work  