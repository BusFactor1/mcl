(in-package :TRAPS)
; Generated from #P"macintosh-hd:hd3:CInterface Translator:Source Interfaces:gliDispatch.h"
; at Sunday July 2,2006 7:25:33 pm.
; 
; 	Copyright:  (c) 1999 by Apple Computer, Inc., all rights reserved.
; 
; #ifndef _GLIDISPATCH_H
; #define _GLIDISPATCH_H

(require-interface "OpenGL/gl")

(require-interface "OpenGL/glext")

(require-interface "OpenGL/gliContext")
; #ifdef __cplusplus
#| #|
extern "C" {
#endif
|#
 |#
; 
; ** GL function dispatch table type
; 
(defrecord __GLIFunctionDispatchRec
   (accum (:pointer :callback))                 ;(void (GLIContext ctx , GLenum op , GLfloat value))
   (alpha_func (:pointer :callback))            ;(void (GLIContext ctx , GLenum func , GLclampf ref))
   (are_textures_resident (:pointer :callback)) ;(GLboolean (GLIContext ctx , GLsizei n , const GLuint * textures , GLboolean * residences))
   (array_element (:pointer :callback))         ;(void (GLIContext ctx , GLint i))
   (begin (:pointer :callback))                 ;(void (GLIContext ctx , GLenum mode))
   (bind_texture (:pointer :callback))          ;(void (GLIContext ctx , GLenum target , GLuint texture))
   (bitmap (:pointer :callback))                ;(void (GLIContext ctx , GLsizei width , GLsizei height , GLfloat xorig , GLfloat yorig , GLfloat xmove , GLfloat ymove , const GLubyte * bitmap))
   (blend_func (:pointer :callback))            ;(void (GLIContext ctx , GLenum sfactor , GLenum dfactor))
   (call_list (:pointer :callback))             ;(void (GLIContext ctx , GLuint list))
   (call_lists (:pointer :callback))            ;(void (GLIContext ctx , GLsizei n , GLenum type , const GLvoid * lists))
   (clear (:pointer :callback))                 ;(void (GLIContext ctx , GLbitfield mask))
   (clear_accum (:pointer :callback))           ;(void (GLIContext ctx , GLfloat red , GLfloat green , GLfloat blue , GLfloat alpha))
   (clear_color (:pointer :callback))           ;(void (GLIContext ctx , GLclampf red , GLclampf green , GLclampf blue , GLclampf alpha))
   (clear_depth (:pointer :callback))           ;(void (GLIContext ctx , GLclampd depth))
   (clear_index (:pointer :callback))           ;(void (GLIContext ctx , GLfloat c))
   (clear_stencil (:pointer :callback))         ;(void (GLIContext ctx , GLint s))
   (clip_plane (:pointer :callback))            ;(void (GLIContext ctx , GLenum plane , const GLdouble * equation))
   (color3b (:pointer :callback))               ;(void (GLIContext ctx , GLbyte red , GLbyte green , GLbyte blue))
   (color3bv (:pointer :callback))              ;(void (GLIContext ctx , const GLbyte * v))
   (color3d (:pointer :callback))               ;(void (GLIContext ctx , GLdouble red , GLdouble green , GLdouble blue))
   (color3dv (:pointer :callback))              ;(void (GLIContext ctx , const GLdouble * v))
   (color3f (:pointer :callback))               ;(void (GLIContext ctx , GLfloat red , GLfloat green , GLfloat blue))
   (color3fv (:pointer :callback))              ;(void (GLIContext ctx , const GLfloat * v))
   (color3i (:pointer :callback))               ;(void (GLIContext ctx , GLint red , GLint green , GLint blue))
   (color3iv (:pointer :callback))              ;(void (GLIContext ctx , const GLint * v))
   (color3s (:pointer :callback))               ;(void (GLIContext ctx , GLshort red , GLshort green , GLshort blue))
   (color3sv (:pointer :callback))              ;(void (GLIContext ctx , const GLshort * v))
   (color3ub (:pointer :callback))              ;(void (GLIContext ctx , GLubyte red , GLubyte green , GLubyte blue))
   (color3ubv (:pointer :callback))             ;(void (GLIContext ctx , const GLubyte * v))
   (color3ui (:pointer :callback))              ;(void (GLIContext ctx , GLuint red , GLuint green , GLuint blue))
   (color3uiv (:pointer :callback))             ;(void (GLIContext ctx , const GLuint * v))
   (color3us (:pointer :callback))              ;(void (GLIContext ctx , GLushort red , GLushort green , GLushort blue))
   (color3usv (:pointer :callback))             ;(void (GLIContext ctx , const GLushort * v))
   (color4b (:pointer :callback))               ;(void (GLIContext ctx , GLbyte red , GLbyte green , GLbyte blue , GLbyte alpha))
   (color4bv (:pointer :callback))              ;(void (GLIContext ctx , const GLbyte * v))
   (color4d (:pointer :callback))               ;(void (GLIContext ctx , GLdouble red , GLdouble green , GLdouble blue , GLdouble alpha))
   (color4dv (:pointer :callback))              ;(void (GLIContext ctx , const GLdouble * v))
   (color4f (:pointer :callback))               ;(void (GLIContext ctx , GLfloat red , GLfloat green , GLfloat blue , GLfloat alpha))
   (color4fv (:pointer :callback))              ;(void (GLIContext ctx , const GLfloat * v))
   (color4i (:pointer :callback))               ;(void (GLIContext ctx , GLint red , GLint green , GLint blue , GLint alpha))
   (color4iv (:pointer :callback))              ;(void (GLIContext ctx , const GLint * v))
   (color4s (:pointer :callback))               ;(void (GLIContext ctx , GLshort red , GLshort green , GLshort blue , GLshort alpha))
   (color4sv (:pointer :callback))              ;(void (GLIContext ctx , const GLshort * v))
   (color4ub (:pointer :callback))              ;(void (GLIContext ctx , GLubyte red , GLubyte green , GLubyte blue , GLubyte alpha))
   (color4ubv (:pointer :callback))             ;(void (GLIContext ctx , const GLubyte * v))
   (color4ui (:pointer :callback))              ;(void (GLIContext ctx , GLuint red , GLuint green , GLuint blue , GLuint alpha))
   (color4uiv (:pointer :callback))             ;(void (GLIContext ctx , const GLuint * v))
   (color4us (:pointer :callback))              ;(void (GLIContext ctx , GLushort red , GLushort green , GLushort blue , GLushort alpha))
   (color4usv (:pointer :callback))             ;(void (GLIContext ctx , const GLushort * v))
   (color_mask (:pointer :callback))            ;(void (GLIContext ctx , GLboolean red , GLboolean green , GLboolean blue , GLboolean alpha))
   (color_material (:pointer :callback))        ;(void (GLIContext ctx , GLenum face , GLenum mode))
   (color_pointer (:pointer :callback))         ;(void (GLIContext ctx , GLint size , GLenum type , GLsizei stride , const GLvoid * pointer))
   (copy_pixels (:pointer :callback))           ;(void (GLIContext ctx , GLint x , GLint y , GLsizei width , GLsizei height , GLenum type))
   (copy_tex_image1D (:pointer :callback))      ;(void (GLIContext ctx , GLenum target , GLint level , GLenum internalFormat , GLint x , GLint y , GLsizei width , GLint border))
   (copy_tex_image2D (:pointer :callback))      ;(void (GLIContext ctx , GLenum target , GLint level , GLenum internalFormat , GLint x , GLint y , GLsizei width , GLsizei height , GLint border))
   (copy_tex_sub_image1D (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint x , GLint y , GLsizei width))
   (copy_tex_sub_image2D (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint yoffset , GLint x , GLint y , GLsizei width , GLsizei height))
   (cull_face (:pointer :callback))             ;(void (GLIContext ctx , GLenum mode))
   (delete_lists (:pointer :callback))          ;(void (GLIContext ctx , GLuint list , GLsizei range))
   (delete_textures (:pointer :callback))       ;(void (GLIContext ctx , GLsizei n , const GLuint * textures))
   (depth_func (:pointer :callback))            ;(void (GLIContext ctx , GLenum func))
   (depth_mask (:pointer :callback))            ;(void (GLIContext ctx , GLboolean flag))
   (depth_range (:pointer :callback))           ;(void (GLIContext ctx , GLclampd zNear , GLclampd zFar))
   (disable (:pointer :callback))               ;(void (GLIContext ctx , GLenum cap))
   (disable_client_state (:pointer :callback))  ;(void (GLIContext ctx , GLenum array))
   (draw_arrays (:pointer :callback))           ;(void (GLIContext ctx , GLenum mode , GLint first , GLsizei count))
   (draw_buffer (:pointer :callback))           ;(void (GLIContext ctx , GLenum mode))
   (draw_elements (:pointer :callback))         ;(void (GLIContext ctx , GLenum mode , GLsizei count , GLenum type , const GLvoid * indices))
   (draw_pixels (:pointer :callback))           ;(void (GLIContext ctx , GLsizei width , GLsizei height , GLenum format , GLenum type , const GLvoid * pixels))
   (edge_flag (:pointer :callback))             ;(void (GLIContext ctx , GLboolean flag))
   (edge_flag_pointer (:pointer :callback))     ;(void (GLIContext ctx , GLsizei stride , const GLvoid * pointer))
   (edge_flagv (:pointer :callback))            ;(void (GLIContext ctx , const GLboolean * flag))
   (enable (:pointer :callback))                ;(void (GLIContext ctx , GLenum cap))
   (enable_client_state (:pointer :callback))   ;(void (GLIContext ctx , GLenum array))
   (end (:pointer :callback))                   ;(void (GLIContext ctx))
   (end_list (:pointer :callback))              ;(void (GLIContext ctx))
   (eval_coord1d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble u))
   (eval_coord1dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * u))
   (eval_coord1f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat u))
   (eval_coord1fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * u))
   (eval_coord2d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble u , GLdouble v))
   (eval_coord2dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * u))
   (eval_coord2f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat u , GLfloat v))
   (eval_coord2fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * u))
   (eval_mesh1 (:pointer :callback))            ;(void (GLIContext ctx , GLenum mode , GLint i1 , GLint i2))
   (eval_mesh2 (:pointer :callback))            ;(void (GLIContext ctx , GLenum mode , GLint i1 , GLint i2 , GLint j1 , GLint j2))
   (eval_point1 (:pointer :callback))           ;(void (GLIContext ctx , GLint i))
   (eval_point2 (:pointer :callback))           ;(void (GLIContext ctx , GLint i , GLint j))
   (feedback_buffer (:pointer :callback))       ;(void (GLIContext ctx , GLsizei size , GLenum type , GLfloat * buffer))
   (finish (:pointer :callback))                ;(void (GLIContext ctx))
   (flush (:pointer :callback))                 ;(void (GLIContext ctx))
   (fogf (:pointer :callback))                  ;(void (GLIContext ctx , GLenum pname , GLfloat param))
   (fogfv (:pointer :callback))                 ;(void (GLIContext ctx , GLenum pname , const GLfloat * params))
   (fogi (:pointer :callback))                  ;(void (GLIContext ctx , GLenum pname , GLint param))
   (fogiv (:pointer :callback))                 ;(void (GLIContext ctx , GLenum pname , const GLint * params))
   (front_face (:pointer :callback))            ;(void (GLIContext ctx , GLenum mode))
   (frustum (:pointer :callback))               ;(void (GLIContext ctx , GLdouble left , GLdouble right , GLdouble bottom , GLdouble top , GLdouble zNear , GLdouble zFar))
   (gen_lists (:pointer :callback))             ;(GLuint (GLIContext ctx , GLsizei range))
   (gen_textures (:pointer :callback))          ;(void (GLIContext ctx , GLsizei n , GLuint * textures))
   (get_booleanv (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLboolean * params))
   (get_clip_plane (:pointer :callback))        ;(void (GLIContext ctx , GLenum plane , GLdouble * equation))
   (get_doublev (:pointer :callback))           ;(void (GLIContext ctx , GLenum pname , GLdouble * params))
   (get_error (:pointer :callback))             ;(GLenum (GLIContext ctx))
   (get_floatv (:pointer :callback))            ;(void (GLIContext ctx , GLenum pname , GLfloat * params))
   (get_integerv (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLint * params))
   (get_lightfv (:pointer :callback))           ;(void (GLIContext ctx , GLenum light , GLenum pname , GLfloat * params))
   (get_lightiv (:pointer :callback))           ;(void (GLIContext ctx , GLenum light , GLenum pname , GLint * params))
   (get_mapdv (:pointer :callback))             ;(void (GLIContext ctx , GLenum target , GLenum query , GLdouble * v))
   (get_mapfv (:pointer :callback))             ;(void (GLIContext ctx , GLenum target , GLenum query , GLfloat * v))
   (get_mapiv (:pointer :callback))             ;(void (GLIContext ctx , GLenum target , GLenum query , GLint * v))
   (get_materialfv (:pointer :callback))        ;(void (GLIContext ctx , GLenum face , GLenum pname , GLfloat * params))
   (get_materialiv (:pointer :callback))        ;(void (GLIContext ctx , GLenum face , GLenum pname , GLint * params))
   (get_pixel_mapfv (:pointer :callback))       ;(void (GLIContext ctx , GLenum map , GLfloat * values))
   (get_pixel_mapuiv (:pointer :callback))      ;(void (GLIContext ctx , GLenum map , GLuint * values))
   (get_pixel_mapusv (:pointer :callback))      ;(void (GLIContext ctx , GLenum map , GLushort * values))
   (get_pointerv (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLvoid * * params))
   (get_polygon_stipple (:pointer :callback))   ;(void (GLIContext ctx , GLubyte * mask))
   (get_string (:pointer :callback))            ;(GLubyte * (GLIContext ctx , GLenum name))
   (get_tex_envfv (:pointer :callback))         ;(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat * params))
   (get_tex_enviv (:pointer :callback))         ;(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (get_tex_gendv (:pointer :callback))         ;(void (GLIContext ctx , GLenum coord , GLenum pname , GLdouble * params))
   (get_tex_genfv (:pointer :callback))         ;(void (GLIContext ctx , GLenum coord , GLenum pname , GLfloat * params))
   (get_tex_geniv (:pointer :callback))         ;(void (GLIContext ctx , GLenum coord , GLenum pname , GLint * params))
   (get_tex_image (:pointer :callback))         ;(void (GLIContext ctx , GLenum target , GLint level , GLenum format , GLenum type , GLvoid * pixels))
   (get_tex_level_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLenum pname , GLfloat * params))
   (get_tex_level_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLenum pname , GLint * params))
   (get_tex_parameterfv (:pointer :callback))   ;(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat * params))
   (get_tex_parameteriv (:pointer :callback))   ;(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (hint (:pointer :callback))                  ;(void (GLIContext ctx , GLenum target , GLenum mode))
   (index_mask (:pointer :callback))            ;(void (GLIContext ctx , GLuint mask))
   (index_pointer (:pointer :callback))         ;(void (GLIContext ctx , GLenum type , GLsizei stride , const GLvoid * pointer))
   (indexd (:pointer :callback))                ;(void (GLIContext ctx , GLdouble c))
   (indexdv (:pointer :callback))               ;(void (GLIContext ctx , const GLdouble * c))
   (indexf (:pointer :callback))                ;(void (GLIContext ctx , GLfloat c))
   (indexfv (:pointer :callback))               ;(void (GLIContext ctx , const GLfloat * c))
   (indexi (:pointer :callback))                ;(void (GLIContext ctx , GLint c))
   (indexiv (:pointer :callback))               ;(void (GLIContext ctx , const GLint * c))
   (indexs (:pointer :callback))                ;(void (GLIContext ctx , GLshort c))
   (indexsv (:pointer :callback))               ;(void (GLIContext ctx , const GLshort * c))
   (indexub (:pointer :callback))               ;(void (GLIContext ctx , GLubyte c))
   (indexubv (:pointer :callback))              ;(void (GLIContext ctx , const GLubyte * c))
   (init_names (:pointer :callback))            ;(void (GLIContext ctx))
   (interleaved_arrays (:pointer :callback))    ;(void (GLIContext ctx , GLenum format , GLsizei stride , const GLvoid * pointer))
   (is_enabled (:pointer :callback))            ;(GLboolean (GLIContext ctx , GLenum cap))
   (is_list (:pointer :callback))               ;(GLboolean (GLIContext ctx , GLuint list))
   (is_texture (:pointer :callback))            ;(GLboolean (GLIContext ctx , GLuint texture))
   (light_modelf (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLfloat param))
   (light_modelfv (:pointer :callback))         ;(void (GLIContext ctx , GLenum pname , const GLfloat * params))
   (light_modeli (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLint param))
   (light_modeliv (:pointer :callback))         ;(void (GLIContext ctx , GLenum pname , const GLint * params))
   (lightf (:pointer :callback))                ;(void (GLIContext ctx , GLenum light , GLenum pname , GLfloat param))
   (lightfv (:pointer :callback))               ;(void (GLIContext ctx , GLenum light , GLenum pname , const GLfloat * params))
   (lighti (:pointer :callback))                ;(void (GLIContext ctx , GLenum light , GLenum pname , GLint param))
   (lightiv (:pointer :callback))               ;(void (GLIContext ctx , GLenum light , GLenum pname , const GLint * params))
   (line_stipple (:pointer :callback))          ;(void (GLIContext ctx , GLint factor , GLushort pattern))
   (line_width (:pointer :callback))            ;(void (GLIContext ctx , GLfloat width))
   (list_base (:pointer :callback))             ;(void (GLIContext ctx , GLuint base))
   (load_identity (:pointer :callback))         ;(void (GLIContext ctx))
   (load_matrixd (:pointer :callback))          ;(void (GLIContext ctx , const GLdouble * m))
   (load_matrixf (:pointer :callback))          ;(void (GLIContext ctx , const GLfloat * m))
   (load_name (:pointer :callback))             ;(void (GLIContext ctx , GLuint name))
   (logic_op (:pointer :callback))              ;(void (GLIContext ctx , GLenum opcode))
   (map1d (:pointer :callback))                 ;(void (GLIContext ctx , GLenum target , GLdouble u1 , GLdouble u2 , GLint stride , GLint order , const GLdouble * points))
   (map1f (:pointer :callback))                 ;(void (GLIContext ctx , GLenum target , GLfloat u1 , GLfloat u2 , GLint stride , GLint order , const GLfloat * points))
   (map2d (:pointer :callback))                 ;(void (GLIContext ctx , GLenum target , GLdouble u1 , GLdouble u2 , GLint ustride , GLint uorder , GLdouble v1 , GLdouble v2 , GLint vstride , GLint vorder , const GLdouble * points))
   (map2f (:pointer :callback))                 ;(void (GLIContext ctx , GLenum target , GLfloat u1 , GLfloat u2 , GLint ustride , GLint uorder , GLfloat v1 , GLfloat v2 , GLint vstride , GLint vorder , const GLfloat * points))
   (map_grid1d (:pointer :callback))            ;(void (GLIContext ctx , GLint un , GLdouble u1 , GLdouble u2))
   (map_grid1f (:pointer :callback))            ;(void (GLIContext ctx , GLint un , GLfloat u1 , GLfloat u2))
   (map_grid2d (:pointer :callback))            ;(void (GLIContext ctx , GLint un , GLdouble u1 , GLdouble u2 , GLint vn , GLdouble v1 , GLdouble v2))
   (map_grid2f (:pointer :callback))            ;(void (GLIContext ctx , GLint un , GLfloat u1 , GLfloat u2 , GLint vn , GLfloat v1 , GLfloat v2))
   (materialf (:pointer :callback))             ;(void (GLIContext ctx , GLenum face , GLenum pname , GLfloat param))
   (materialfv (:pointer :callback))            ;(void (GLIContext ctx , GLenum face , GLenum pname , const GLfloat * params))
   (materiali (:pointer :callback))             ;(void (GLIContext ctx , GLenum face , GLenum pname , GLint param))
   (materialiv (:pointer :callback))            ;(void (GLIContext ctx , GLenum face , GLenum pname , const GLint * params))
   (matrix_mode (:pointer :callback))           ;(void (GLIContext ctx , GLenum mode))
   (mult_matrixd (:pointer :callback))          ;(void (GLIContext ctx , const GLdouble * m))
   (mult_matrixf (:pointer :callback))          ;(void (GLIContext ctx , const GLfloat * m))
   (new_list (:pointer :callback))              ;(void (GLIContext ctx , GLuint list , GLenum mode))
   (normal3b (:pointer :callback))              ;(void (GLIContext ctx , GLbyte nx , GLbyte ny , GLbyte nz))
   (normal3bv (:pointer :callback))             ;(void (GLIContext ctx , const GLbyte * v))
   (normal3d (:pointer :callback))              ;(void (GLIContext ctx , GLdouble nx , GLdouble ny , GLdouble nz))
   (normal3dv (:pointer :callback))             ;(void (GLIContext ctx , const GLdouble * v))
   (normal3f (:pointer :callback))              ;(void (GLIContext ctx , GLfloat nx , GLfloat ny , GLfloat nz))
   (normal3fv (:pointer :callback))             ;(void (GLIContext ctx , const GLfloat * v))
   (normal3i (:pointer :callback))              ;(void (GLIContext ctx , GLint nx , GLint ny , GLint nz))
   (normal3iv (:pointer :callback))             ;(void (GLIContext ctx , const GLint * v))
   (normal3s (:pointer :callback))              ;(void (GLIContext ctx , GLshort nx , GLshort ny , GLshort nz))
   (normal3sv (:pointer :callback))             ;(void (GLIContext ctx , const GLshort * v))
   (normal_pointer (:pointer :callback))        ;(void (GLIContext ctx , GLenum type , GLsizei stride , const GLvoid * pointer))
   (ortho (:pointer :callback))                 ;(void (GLIContext ctx , GLdouble left , GLdouble right , GLdouble bottom , GLdouble top , GLdouble zNear , GLdouble zFar))
   (pass_through (:pointer :callback))          ;(void (GLIContext ctx , GLfloat token))
   (pixel_mapfv (:pointer :callback))           ;(void (GLIContext ctx , GLenum map , GLsizei mapsize , const GLfloat * values))
   (pixel_mapuiv (:pointer :callback))          ;(void (GLIContext ctx , GLenum map , GLsizei mapsize , const GLuint * values))
   (pixel_mapusv (:pointer :callback))          ;(void (GLIContext ctx , GLenum map , GLsizei mapsize , const GLushort * values))
   (pixel_storef (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLfloat param))
   (pixel_storei (:pointer :callback))          ;(void (GLIContext ctx , GLenum pname , GLint param))
   (pixel_transferf (:pointer :callback))       ;(void (GLIContext ctx , GLenum pname , GLfloat param))
   (pixel_transferi (:pointer :callback))       ;(void (GLIContext ctx , GLenum pname , GLint param))
   (pixel_zoom (:pointer :callback))            ;(void (GLIContext ctx , GLfloat xfactor , GLfloat yfactor))
   (point_size (:pointer :callback))            ;(void (GLIContext ctx , GLfloat size))
   (polygon_mode (:pointer :callback))          ;(void (GLIContext ctx , GLenum face , GLenum mode))
   (polygon_offset (:pointer :callback))        ;(void (GLIContext ctx , GLfloat factor , GLfloat units))
   (polygon_stipple (:pointer :callback))       ;(void (GLIContext ctx , const GLubyte * mask))
   (pop_attrib (:pointer :callback))            ;(void (GLIContext ctx))
   (pop_client_attrib (:pointer :callback))     ;(void (GLIContext ctx))
   (pop_matrix (:pointer :callback))            ;(void (GLIContext ctx))
   (pop_name (:pointer :callback))              ;(void (GLIContext ctx))
   (prioritize_textures (:pointer :callback))   ;(void (GLIContext ctx , GLsizei n , const GLuint * textures , const GLclampf * priorities))
   (push_attrib (:pointer :callback))           ;(void (GLIContext ctx , GLbitfield mask))
   (push_client_attrib (:pointer :callback))    ;(void (GLIContext ctx , GLbitfield mask))
   (push_matrix (:pointer :callback))           ;(void (GLIContext ctx))
   (push_name (:pointer :callback))             ;(void (GLIContext ctx , GLuint name))
   (raster_pos2d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble x , GLdouble y))
   (raster_pos2dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * v))
   (raster_pos2f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat x , GLfloat y))
   (raster_pos2fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * v))
   (raster_pos2i (:pointer :callback))          ;(void (GLIContext ctx , GLint x , GLint y))
   (raster_pos2iv (:pointer :callback))         ;(void (GLIContext ctx , const GLint * v))
   (raster_pos2s (:pointer :callback))          ;(void (GLIContext ctx , GLshort x , GLshort y))
   (raster_pos2sv (:pointer :callback))         ;(void (GLIContext ctx , const GLshort * v))
   (raster_pos3d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z))
   (raster_pos3dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * v))
   (raster_pos3f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z))
   (raster_pos3fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * v))
   (raster_pos3i (:pointer :callback))          ;(void (GLIContext ctx , GLint x , GLint y , GLint z))
   (raster_pos3iv (:pointer :callback))         ;(void (GLIContext ctx , const GLint * v))
   (raster_pos3s (:pointer :callback))          ;(void (GLIContext ctx , GLshort x , GLshort y , GLshort z))
   (raster_pos3sv (:pointer :callback))         ;(void (GLIContext ctx , const GLshort * v))
   (raster_pos4d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z , GLdouble w))
   (raster_pos4dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * v))
   (raster_pos4f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z , GLfloat w))
   (raster_pos4fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * v))
   (raster_pos4i (:pointer :callback))          ;(void (GLIContext ctx , GLint x , GLint y , GLint z , GLint w))
   (raster_pos4iv (:pointer :callback))         ;(void (GLIContext ctx , const GLint * v))
   (raster_pos4s (:pointer :callback))          ;(void (GLIContext ctx , GLshort x , GLshort y , GLshort z , GLshort w))
   (raster_pos4sv (:pointer :callback))         ;(void (GLIContext ctx , const GLshort * v))
   (read_buffer (:pointer :callback))           ;(void (GLIContext ctx , GLenum mode))
   (read_pixels (:pointer :callback))           ;(void (GLIContext ctx , GLint x , GLint y , GLsizei width , GLsizei height , GLenum format , GLenum type , GLvoid * pixels))
   (rectd (:pointer :callback))                 ;(void (GLIContext ctx , GLdouble x1 , GLdouble y1 , GLdouble x2 , GLdouble y2))
   (rectdv (:pointer :callback))                ;(void (GLIContext ctx , const GLdouble * v1 , const GLdouble * v2))
   (rectf (:pointer :callback))                 ;(void (GLIContext ctx , GLfloat x1 , GLfloat y1 , GLfloat x2 , GLfloat y2))
   (rectfv (:pointer :callback))                ;(void (GLIContext ctx , const GLfloat * v1 , const GLfloat * v2))
   (recti (:pointer :callback))                 ;(void (GLIContext ctx , GLint x1 , GLint y1 , GLint x2 , GLint y2))
   (rectiv (:pointer :callback))                ;(void (GLIContext ctx , const GLint * v1 , const GLint * v2))
   (rects (:pointer :callback))                 ;(void (GLIContext ctx , GLshort x1 , GLshort y1 , GLshort x2 , GLshort y2))
   (rectsv (:pointer :callback))                ;(void (GLIContext ctx , const GLshort * v1 , const GLshort * v2))
   (render_mode (:pointer :callback))           ;(GLint (GLIContext ctx , GLenum mode))
   (rotated (:pointer :callback))               ;(void (GLIContext ctx , GLdouble angle , GLdouble x , GLdouble y , GLdouble z))
   (rotatef (:pointer :callback))               ;(void (GLIContext ctx , GLfloat angle , GLfloat x , GLfloat y , GLfloat z))
   (scaled (:pointer :callback))                ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z))
   (scalef (:pointer :callback))                ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z))
   (scissor (:pointer :callback))               ;(void (GLIContext ctx , GLint x , GLint y , GLsizei width , GLsizei height))
   (select_buffer (:pointer :callback))         ;(void (GLIContext ctx , GLsizei size , GLuint * buffer))
   (shade_model (:pointer :callback))           ;(void (GLIContext ctx , GLenum mode))
   (stencil_func (:pointer :callback))          ;(void (GLIContext ctx , GLenum func , GLint ref , GLuint mask))
   (stencil_mask (:pointer :callback))          ;(void (GLIContext ctx , GLuint mask))
   (stencil_op (:pointer :callback))            ;(void (GLIContext ctx , GLenum fail , GLenum zfail , GLenum zpass))
   (tex_coord1d (:pointer :callback))           ;(void (GLIContext ctx , GLdouble s))
   (tex_coord1dv (:pointer :callback))          ;(void (GLIContext ctx , const GLdouble * v))
   (tex_coord1f (:pointer :callback))           ;(void (GLIContext ctx , GLfloat s))
   (tex_coord1fv (:pointer :callback))          ;(void (GLIContext ctx , const GLfloat * v))
   (tex_coord1i (:pointer :callback))           ;(void (GLIContext ctx , GLint s))
   (tex_coord1iv (:pointer :callback))          ;(void (GLIContext ctx , const GLint * v))
   (tex_coord1s (:pointer :callback))           ;(void (GLIContext ctx , GLshort s))
   (tex_coord1sv (:pointer :callback))          ;(void (GLIContext ctx , const GLshort * v))
   (tex_coord2d (:pointer :callback))           ;(void (GLIContext ctx , GLdouble s , GLdouble t))
   (tex_coord2dv (:pointer :callback))          ;(void (GLIContext ctx , const GLdouble * v))
   (tex_coord2f (:pointer :callback))           ;(void (GLIContext ctx , GLfloat s , GLfloat t))
   (tex_coord2fv (:pointer :callback))          ;(void (GLIContext ctx , const GLfloat * v))
   (tex_coord2i (:pointer :callback))           ;(void (GLIContext ctx , GLint s , GLint t))
   (tex_coord2iv (:pointer :callback))          ;(void (GLIContext ctx , const GLint * v))
   (tex_coord2s (:pointer :callback))           ;(void (GLIContext ctx , GLshort s , GLshort t))
   (tex_coord2sv (:pointer :callback))          ;(void (GLIContext ctx , const GLshort * v))
   (tex_coord3d (:pointer :callback))           ;(void (GLIContext ctx , GLdouble s , GLdouble t , GLdouble r))
   (tex_coord3dv (:pointer :callback))          ;(void (GLIContext ctx , const GLdouble * v))
   (tex_coord3f (:pointer :callback))           ;(void (GLIContext ctx , GLfloat s , GLfloat t , GLfloat r))
   (tex_coord3fv (:pointer :callback))          ;(void (GLIContext ctx , const GLfloat * v))
   (tex_coord3i (:pointer :callback))           ;(void (GLIContext ctx , GLint s , GLint t , GLint r))
   (tex_coord3iv (:pointer :callback))          ;(void (GLIContext ctx , const GLint * v))
   (tex_coord3s (:pointer :callback))           ;(void (GLIContext ctx , GLshort s , GLshort t , GLshort r))
   (tex_coord3sv (:pointer :callback))          ;(void (GLIContext ctx , const GLshort * v))
   (tex_coord4d (:pointer :callback))           ;(void (GLIContext ctx , GLdouble s , GLdouble t , GLdouble r , GLdouble q))
   (tex_coord4dv (:pointer :callback))          ;(void (GLIContext ctx , const GLdouble * v))
   (tex_coord4f (:pointer :callback))           ;(void (GLIContext ctx , GLfloat s , GLfloat t , GLfloat r , GLfloat q))
   (tex_coord4fv (:pointer :callback))          ;(void (GLIContext ctx , const GLfloat * v))
   (tex_coord4i (:pointer :callback))           ;(void (GLIContext ctx , GLint s , GLint t , GLint r , GLint q))
   (tex_coord4iv (:pointer :callback))          ;(void (GLIContext ctx , const GLint * v))
   (tex_coord4s (:pointer :callback))           ;(void (GLIContext ctx , GLshort s , GLshort t , GLshort r , GLshort q))
   (tex_coord4sv (:pointer :callback))          ;(void (GLIContext ctx , const GLshort * v))
   (tex_coord_pointer (:pointer :callback))     ;(void (GLIContext ctx , GLint size , GLenum type , GLsizei stride , const GLvoid * pointer))
   (tex_envf (:pointer :callback))              ;(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat param))
   (tex_envfv (:pointer :callback))             ;(void (GLIContext ctx , GLenum target , GLenum pname , const GLfloat * params))
   (tex_envi (:pointer :callback))              ;(void (GLIContext ctx , GLenum target , GLenum pname , GLint param))
   (tex_enviv (:pointer :callback))             ;(void (GLIContext ctx , GLenum target , GLenum pname , const GLint * params))
   (tex_gend (:pointer :callback))              ;(void (GLIContext ctx , GLenum coord , GLenum pname , GLdouble param))
   (tex_gendv (:pointer :callback))             ;(void (GLIContext ctx , GLenum coord , GLenum pname , const GLdouble * params))
   (tex_genf (:pointer :callback))              ;(void (GLIContext ctx , GLenum coord , GLenum pname , GLfloat param))
   (tex_genfv (:pointer :callback))             ;(void (GLIContext ctx , GLenum coord , GLenum pname , const GLfloat * params))
   (tex_geni (:pointer :callback))              ;(void (GLIContext ctx , GLenum coord , GLenum pname , GLint param))
   (tex_geniv (:pointer :callback))             ;(void (GLIContext ctx , GLenum coord , GLenum pname , const GLint * params))
   (tex_image1D (:pointer :callback))           ;(void (GLIContext ctx , GLenum target , GLint level , GLenum internalformat , GLsizei width , GLint border , GLenum format , GLenum type , const GLvoid * pixels))
   (tex_image2D (:pointer :callback))           ;(void (GLIContext ctx , GLenum target , GLint level , GLenum internalformat , GLsizei width , GLsizei height , GLint border , GLenum format , GLenum type , const GLvoid * pixels))
   (tex_parameterf (:pointer :callback))        ;(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat param))
   (tex_parameterfv (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLenum pname , const GLfloat * params))
   (tex_parameteri (:pointer :callback))        ;(void (GLIContext ctx , GLenum target , GLenum pname , GLint param))
   (tex_parameteriv (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLenum pname , const GLint * params))
   (tex_sub_image1D (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLsizei width , GLenum format , GLenum type , const GLvoid * pixels))
   (tex_sub_image2D (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint yoffset , GLsizei width , GLsizei height , GLenum format , GLenum type , const GLvoid * pixels))
   (translated (:pointer :callback))            ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z))
   (translatef (:pointer :callback))            ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z))
   (vertex2d (:pointer :callback))              ;(void (GLIContext ctx , GLdouble x , GLdouble y))
   (vertex2dv (:pointer :callback))             ;(void (GLIContext ctx , const GLdouble * v))
   (vertex2f (:pointer :callback))              ;(void (GLIContext ctx , GLfloat x , GLfloat y))
   (vertex2fv (:pointer :callback))             ;(void (GLIContext ctx , const GLfloat * v))
   (vertex2i (:pointer :callback))              ;(void (GLIContext ctx , GLint x , GLint y))
   (vertex2iv (:pointer :callback))             ;(void (GLIContext ctx , const GLint * v))
   (vertex2s (:pointer :callback))              ;(void (GLIContext ctx , GLshort x , GLshort y))
   (vertex2sv (:pointer :callback))             ;(void (GLIContext ctx , const GLshort * v))
   (vertex3d (:pointer :callback))              ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z))
   (vertex3dv (:pointer :callback))             ;(void (GLIContext ctx , const GLdouble * v))
   (vertex3f (:pointer :callback))              ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z))
   (vertex3fv (:pointer :callback))             ;(void (GLIContext ctx , const GLfloat * v))
   (vertex3i (:pointer :callback))              ;(void (GLIContext ctx , GLint x , GLint y , GLint z))
   (vertex3iv (:pointer :callback))             ;(void (GLIContext ctx , const GLint * v))
   (vertex3s (:pointer :callback))              ;(void (GLIContext ctx , GLshort x , GLshort y , GLshort z))
   (vertex3sv (:pointer :callback))             ;(void (GLIContext ctx , const GLshort * v))
   (vertex4d (:pointer :callback))              ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z , GLdouble w))
   (vertex4dv (:pointer :callback))             ;(void (GLIContext ctx , const GLdouble * v))
   (vertex4f (:pointer :callback))              ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z , GLfloat w))
   (vertex4fv (:pointer :callback))             ;(void (GLIContext ctx , const GLfloat * v))
   (vertex4i (:pointer :callback))              ;(void (GLIContext ctx , GLint x , GLint y , GLint z , GLint w))
   (vertex4iv (:pointer :callback))             ;(void (GLIContext ctx , const GLint * v))
   (vertex4s (:pointer :callback))              ;(void (GLIContext ctx , GLshort x , GLshort y , GLshort z , GLshort w))
   (vertex4sv (:pointer :callback))             ;(void (GLIContext ctx , const GLshort * v))
   (vertex_pointer (:pointer :callback))        ;(void (GLIContext ctx , GLint size , GLenum type , GLsizei stride , const GLvoid * pointer))
   (viewport (:pointer :callback))              ;(void (GLIContext ctx , GLint x , GLint y , GLsizei width , GLsizei height))
   (blend_func_separate (:pointer :callback))   ;(void (GLIContext ctx , GLenum sfactorRGB , GLenum dfactorRGB , GLenum sfactorAlpha , GLenum dfactorAlpha))
   (blend_color (:pointer :callback))           ;(void (GLIContext ctx , GLclampf red , GLclampf green , GLclampf blue , GLclampf alpha))
   (blend_equation (:pointer :callback))        ;(void (GLIContext ctx , GLenum mode))
   (lock_arrays_EXT (:pointer :callback))       ;(void (GLIContext ctx , GLint first , GLsizei count))
   (unlock_arrays_EXT (:pointer :callback))     ;(void (GLIContext ctx))
   (client_active_texture (:pointer :callback)) ;(void (GLIContext ctx , GLenum target))
   (active_texture (:pointer :callback))        ;(void (GLIContext ctx , GLenum target))
   (multi_tex_coord1d (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLdouble s))
   (multi_tex_coord1dv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLdouble * v))
   (multi_tex_coord1f (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLfloat s))
   (multi_tex_coord1fv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLfloat * v))
   (multi_tex_coord1i (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLint s))
   (multi_tex_coord1iv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLint * v))
   (multi_tex_coord1s (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLshort s))
   (multi_tex_coord1sv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLshort * v))
   (multi_tex_coord2d (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLdouble s , GLdouble t))
   (multi_tex_coord2dv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLdouble * v))
   (multi_tex_coord2f (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLfloat s , GLfloat t))
   (multi_tex_coord2fv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLfloat * v))
   (multi_tex_coord2i (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLint s , GLint t))
   (multi_tex_coord2iv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLint * v))
   (multi_tex_coord2s (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLshort s , GLshort t))
   (multi_tex_coord2sv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLshort * v))
   (multi_tex_coord3d (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLdouble s , GLdouble t , GLdouble r))
   (multi_tex_coord3dv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLdouble * v))
   (multi_tex_coord3f (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLfloat s , GLfloat t , GLfloat r))
   (multi_tex_coord3fv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLfloat * v))
   (multi_tex_coord3i (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLint s , GLint t , GLint r))
   (multi_tex_coord3iv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLint * v))
   (multi_tex_coord3s (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLshort s , GLshort t , GLshort r))
   (multi_tex_coord3sv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLshort * v))
   (multi_tex_coord4d (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLdouble s , GLdouble t , GLdouble r , GLdouble q))
   (multi_tex_coord4dv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLdouble * v))
   (multi_tex_coord4f (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLfloat s , GLfloat t , GLfloat r , GLfloat q))
   (multi_tex_coord4fv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLfloat * v))
   (multi_tex_coord4i (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLint s , GLint t , GLint r , GLint q))
   (multi_tex_coord4iv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLint * v))
   (multi_tex_coord4s (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLshort s , GLshort t , GLshort r , GLshort q))
   (multi_tex_coord4sv (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , const GLshort * v))
   (load_transpose_matrixd (:pointer :callback));(void (GLIContext ctx , const GLdouble * m))
   (load_transpose_matrixf (:pointer :callback));(void (GLIContext ctx , const GLfloat * m))
   (mult_transpose_matrixd (:pointer :callback));(void (GLIContext ctx , const GLdouble * m))
   (mult_transpose_matrixf (:pointer :callback));(void (GLIContext ctx , const GLfloat * m))
   (compressed_tex_image3D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLenum internalformat , GLsizei width , GLsizei height , GLsizei depth , GLint border , GLsizei imageSize , const GLvoid * data))
   (compressed_tex_image2D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLenum internalformat , GLsizei width , GLsizei height , GLint border , GLsizei imageSize , const GLvoid * data))
   (compressed_tex_image1D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLenum internalformat , GLsizei width , GLint border , GLsizei imageSize , const GLvoid * data))
   (compressed_tex_sub_image3D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint yoffset , GLint zoffset , GLsizei width , GLsizei height , GLsizei depth , GLenum format , GLsizei imageSize , const GLvoid * data))
   (compressed_tex_sub_image2D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint yoffset , GLsizei width , GLsizei height , GLenum format , GLsizei imageSize , const GLvoid * data))
   (compressed_tex_sub_image1D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLsizei width , GLenum format , GLsizei imageSize , const GLvoid * data))
   (get_compressed_tex_image (:pointer :callback));(void (GLIContext ctx , GLenum target , GLint level , GLvoid * img))
   (secondary_color3b (:pointer :callback))     ;(void (GLIContext ctx , GLbyte red , GLbyte green , GLbyte blue))
   (secondary_color3bv (:pointer :callback))    ;(void (GLIContext ctx , const GLbyte * v))
   (secondary_color3d (:pointer :callback))     ;(void (GLIContext ctx , GLdouble red , GLdouble green , GLdouble blue))
   (secondary_color3dv (:pointer :callback))    ;(void (GLIContext ctx , const GLdouble * v))
   (secondary_color3f (:pointer :callback))     ;(void (GLIContext ctx , GLfloat red , GLfloat green , GLfloat blue))
   (secondary_color3fv (:pointer :callback))    ;(void (GLIContext ctx , const GLfloat * v))
   (secondary_color3i (:pointer :callback))     ;(void (GLIContext ctx , GLint red , GLint green , GLint blue))
   (secondary_color3iv (:pointer :callback))    ;(void (GLIContext ctx , const GLint * v))
   (secondary_color3s (:pointer :callback))     ;(void (GLIContext ctx , GLshort red , GLshort green , GLshort blue))
   (secondary_color3sv (:pointer :callback))    ;(void (GLIContext ctx , const GLshort * v))
   (secondary_color3ub (:pointer :callback))    ;(void (GLIContext ctx , GLubyte red , GLubyte green , GLubyte blue))
   (secondary_color3ubv (:pointer :callback))   ;(void (GLIContext ctx , const GLubyte * v))
   (secondary_color3ui (:pointer :callback))    ;(void (GLIContext ctx , GLuint red , GLuint green , GLuint blue))
   (secondary_color3uiv (:pointer :callback))   ;(void (GLIContext ctx , const GLuint * v))
   (secondary_color3us (:pointer :callback))    ;(void (GLIContext ctx , GLushort red , GLushort green , GLushort blue))
   (secondary_color3usv (:pointer :callback))   ;(void (GLIContext ctx , const GLushort * v))
   (secondary_color_pointer (:pointer :callback));(void (GLIContext ctx , GLint size , GLenum type , GLsizei stride , const GLvoid * pointer))
   (vertex_array_range_EXT (:pointer :callback));(void (GLIContext ctx , GLsizei count , const GLvoid * pointer))
   (flush_vertex_array_range_EXT (:pointer :callback));(void (GLIContext ctx , GLsizei count , const GLvoid * pointer))
   (draw_range_elements (:pointer :callback))   ;(void (GLIContext ctx , GLenum mode , GLuint start , GLuint end , GLsizei count , GLenum type , const GLvoid * indices))
   (color_table (:pointer :callback))           ;(void (GLIContext ctx , GLenum target , GLenum internalformat , GLsizei width , GLenum format , GLenum type , const GLvoid * table))
   (color_table_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , const GLfloat * params))
   (color_table_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , const GLint * params))
   (copy_color_table (:pointer :callback))      ;(void (GLIContext ctx , GLenum target , GLenum internalformat , GLint x , GLint y , GLsizei width))
   (get_color_table (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLenum format , GLenum type , GLvoid * table))
   (get_color_table_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat * params))
   (get_color_table_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (color_sub_table (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLsizei start , GLsizei count , GLenum format , GLenum type , const GLvoid * data))
   (copy_color_sub_table (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLsizei start , GLint x , GLint y , GLsizei width))
   (convolution_filter1D (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLenum internalformat , GLsizei width , GLenum format , GLenum type , const GLvoid * image))
   (convolution_filter2D (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLenum internalformat , GLsizei width , GLsizei height , GLenum format , GLenum type , const GLvoid * image))
   (convolution_parameterf (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat params))
   (convolution_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , const GLfloat * params))
   (convolution_parameteri (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLint params))
   (convolution_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , const GLint * params))
   (copy_convolution_filter1D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum internalformat , GLint x , GLint y , GLsizei width))
   (copy_convolution_filter2D (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum internalformat , GLint x , GLint y , GLsizei width , GLsizei height))
   (get_convolution_filter (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum format , GLenum type , GLvoid * image))
   (get_convolution_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat * params))
   (get_convolution_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (get_separable_filter (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLenum format , GLenum type , GLvoid * row , GLvoid * column , GLvoid * span))
   (separable_filter2D (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , GLenum internalformat , GLsizei width , GLsizei height , GLenum format , GLenum type , const GLvoid * row , const GLvoid * column))
   (get_histogram (:pointer :callback))         ;(void (GLIContext ctx , GLenum target , GLboolean reset , GLenum format , GLenum type , GLvoid * values))
   (get_histogram_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat * params))
   (get_histogram_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (get_minmax (:pointer :callback))            ;(void (GLIContext ctx , GLenum target , GLboolean reset , GLenum format , GLenum type , GLvoid * values))
   (get_minmax_parameterfv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLfloat * params))
   (get_minmax_parameteriv (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (histogram (:pointer :callback))             ;(void (GLIContext ctx , GLenum target , GLsizei width , GLenum internalformat , GLboolean sink))
   (minmax (:pointer :callback))                ;(void (GLIContext ctx , GLenum target , GLenum internalformat , GLboolean sink))
   (reset_histogram (:pointer :callback))       ;(void (GLIContext ctx , GLenum target))
   (reset_minmax (:pointer :callback))          ;(void (GLIContext ctx , GLenum target))
   (tex_image3D (:pointer :callback))           ;(void (GLIContext ctx , GLenum target , GLint level , GLenum internalFormat , GLsizei width , GLsizei height , GLsizei depth , GLint border , GLenum format , GLenum type , const GLvoid * pixels))
   (tex_sub_image3D (:pointer :callback))       ;(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint yoffset , GLint zoffset , GLsizei width , GLsizei height , GLsizei depth , GLenum format , GLenum type , const GLvoid * pixels))
   (copy_tex_sub_image3D (:pointer :callback))  ;(void (GLIContext ctx , GLenum target , GLint level , GLint xoffset , GLint yoffset , GLint zoffset , GLint x , GLint y , GLsizei width , GLsizei height))
   (combiner_parameterfv_NV (:pointer :callback));(void (GLIContext ctx , GLenum pname , const GLfloat * params))
   (combiner_parameterf_NV (:pointer :callback));(void (GLIContext ctx , GLenum pname , GLfloat param))
   (combiner_parameteriv_NV (:pointer :callback));(void (GLIContext ctx , GLenum pname , const GLint * params))
   (combiner_parameteri_NV (:pointer :callback));(void (GLIContext ctx , GLenum pname , GLint param))
   (combiner_input_NV (:pointer :callback))     ;(void (GLIContext ctx , GLenum stage , GLenum portion , GLenum variable , GLenum input , GLenum mapping , GLenum componentUsage))
   (combiner_output_NV (:pointer :callback))    ;(void (GLIContext ctx , GLenum stage , GLenum portion , GLenum abOutput , GLenum cdOutput , GLenum sumOutput , GLenum scale , GLenum bias , GLboolean abDotProduct , GLboolean cdDotProduct , GLboolean muxSum))
   (final_combiner_input_NV (:pointer :callback));(void (GLIContext ctx , GLenum variable , GLenum input , GLenum mapping , GLenum componentUsage))
   (get_combiner_input_parameterfv_NV (:pointer :callback));(void (GLIContext ctx , GLenum stage , GLenum portion , GLenum variable , GLenum pname , GLfloat * params))
   (get_combiner_input_parameteriv_NV (:pointer :callback));(void (GLIContext ctx , GLenum stage , GLenum portion , GLenum variable , GLenum pname , GLint * params))
   (get_combiner_output_parameterfv_NV (:pointer :callback));(void (GLIContext ctx , GLenum stage , GLenum portion , GLenum pname , GLfloat * params))
   (get_combiner_output_parameteriv_NV (:pointer :callback));(void (GLIContext ctx , GLenum stage , GLenum portion , GLenum pname , GLint * params))
   (get_final_combiner_input_parameterfv_NV (:pointer :callback));(void (GLIContext ctx , GLenum variable , GLenum pname , GLfloat * params))
   (get_final_combiner_input_parameteriv_NV (:pointer :callback));(void (GLIContext ctx , GLenum variable , GLenum pname , GLint * params))
   (combiner_stage_parameterfv_NV (:pointer :callback));(void (GLIContext ctx , GLenum stage , GLenum pname , const GLfloat * params))
   (get_combiner_stage_parameterfv_NV (:pointer :callback));(void (GLIContext ctx , GLenum stage , GLenum pname , GLfloat * params))
   (texture_range_APPLE (:pointer :callback))   ;(void (GLIContext ctx , GLenum target , GLsizei length , const GLvoid * pointer))
   (get_tex_parameter_pointerv_APPLE (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLvoid ** params))
   (blend_equation_separate_ATI (:pointer :callback));(void (GLIContext ctx , GLenum equationRGB , GLenum equationAlpha))
   (sample_coverage (:pointer :callback))       ;(void (GLIContext ctx , GLclampf value , GLboolean invert))
   (sample_pass (:pointer :callback))           ;(void (GLIContext ctx , GLenum mode))
   (pn_trianglesi_ATI (:pointer :callback))     ;(void (GLIContext ctx , GLenum pname , GLint param))
   (pn_trianglesf_ATI (:pointer :callback))     ;(void (GLIContext ctx , GLenum pname , GLfloat param))
   (gen_fences_APPLE (:pointer :callback))      ;(void (GLIContext ctx , GLsizei n , GLuint * fences))
   (delete_fences_APPLE (:pointer :callback))   ;(void (GLIContext ctx , GLsizei n , const GLuint * fences))
   (set_fence_APPLE (:pointer :callback))       ;(void (GLIContext ctx , GLuint fence))
   (is_fence_APPLE (:pointer :callback))        ;(GLboolean (GLIContext ctx , GLuint fence))
   (test_fence_APPLE (:pointer :callback))      ;(GLboolean (GLIContext ctx , GLuint fence))
   (finish_fence_APPLE (:pointer :callback))    ;(void (GLIContext ctx , GLuint fence))
   (test_object_APPLE (:pointer :callback))     ;(GLboolean (GLIContext ctx , GLenum object , GLuint name))
   (finish_object_APPLE (:pointer :callback))   ;(void (GLIContext ctx , GLenum object , GLuint name))
   (bind_program_ARB (:pointer :callback))      ;(void (GLIContext ctx , GLenum target , GLuint program))
   (delete_programs_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLsizei n , const GLuint * programs))
   (gen_programs_ARB (:pointer :callback))      ;(void (GLIContext ctx , GLsizei n , GLuint * programs))
   (is_program_ARB (:pointer :callback))        ;(GLboolean (GLIContext ctx , GLuint program))
   (vertex_attrib1s_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLshort x))
   (vertex_attrib1f_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLfloat x))
   (vertex_attrib1d_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLdouble x))
   (vertex_attrib2s_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLshort x , GLshort y))
   (vertex_attrib2f_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLfloat x , GLfloat y))
   (vertex_attrib2d_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLdouble x , GLdouble y))
   (vertex_attrib3s_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLshort x , GLshort y , GLshort z))
   (vertex_attrib3f_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLfloat x , GLfloat y , GLfloat z))
   (vertex_attrib3d_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLdouble x , GLdouble y , GLdouble z))
   (vertex_attrib4s_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLshort x , GLshort y , GLshort z , GLshort w))
   (vertex_attrib4f_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLfloat x , GLfloat y , GLfloat z , GLfloat w))
   (vertex_attrib4d_ARB (:pointer :callback))   ;(void (GLIContext ctx , GLuint index , GLdouble x , GLdouble y , GLdouble z , GLdouble w))
   (vertex_attrib4Nub_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , GLubyte x , GLubyte y , GLubyte z , GLubyte w))
   (vertex_attrib1sv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLshort * v))
   (vertex_attrib1fv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLfloat * v))
   (vertex_attrib1dv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLdouble * v))
   (vertex_attrib2sv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLshort * v))
   (vertex_attrib2fv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLfloat * v))
   (vertex_attrib2dv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLdouble * v))
   (vertex_attrib3sv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLshort * v))
   (vertex_attrib3fv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLfloat * v))
   (vertex_attrib3dv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLdouble * v))
   (vertex_attrib4bv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLbyte * v))
   (vertex_attrib4sv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLshort * v))
   (vertex_attrib4iv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLint * v))
   (vertex_attrib4ubv_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , const GLubyte * v))
   (vertex_attrib4usv_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , const GLushort * v))
   (vertex_attrib4uiv_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , const GLuint * v))
   (vertex_attrib4fv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLfloat * v))
   (vertex_attrib4dv_ARB (:pointer :callback))  ;(void (GLIContext ctx , GLuint index , const GLdouble * v))
   (vertex_attrib4Nbv_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , const GLbyte * v))
   (vertex_attrib4Nsv_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , const GLshort * v))
   (vertex_attrib4Niv_ARB (:pointer :callback)) ;(void (GLIContext ctx , GLuint index , const GLint * v))
   (vertex_attrib4Nubv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , const GLubyte * v))
   (vertex_attrib4Nusv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , const GLushort * v))
   (vertex_attrib4Nuiv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , const GLuint * v))
   (vertex_attrib_pointer_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLint size , GLenum type , GLboolean normalized , GLsizei stride , const GLvoid * pointer))
   (enable_vertex_attrib_array_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index))
   (disable_vertex_attrib_array_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index))
   (get_vertex_attribdv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLenum pname , GLdouble * params))
   (get_vertex_attribfv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLenum pname , GLfloat * params))
   (get_vertex_attribiv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLenum pname , GLint * params))
   (get_vertex_attrib_pointerv_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLenum pname , GLvoid ** pointer))
   (program_env_parameter4d_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLdouble x , GLdouble y , GLdouble z , GLdouble w))
   (program_env_parameter4dv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , const GLdouble * params))
   (program_env_parameter4f_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLfloat x , GLfloat y , GLfloat z , GLfloat w))
   (program_env_parameter4fv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , const GLfloat * params))
   (program_local_parameter4d_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLdouble x , GLdouble y , GLdouble z , GLdouble w))
   (program_local_parameter4dv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , const GLdouble * params))
   (program_local_parameter4f_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLfloat x , GLfloat y , GLfloat z , GLfloat w))
   (program_local_parameter4fv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , const GLfloat * params))
   (get_program_env_parameterdv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLdouble * params))
   (get_program_env_parameterfv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLfloat * params))
   (get_program_local_parameterdv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLdouble * params))
   (get_program_local_parameterfv_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLuint index , GLfloat * params))
   (program_string_ARB (:pointer :callback))    ;(void (GLIContext ctx , GLenum target , GLenum format , GLsizei len , const GLvoid * string))
   (get_program_string_ARB (:pointer :callback));(void (GLIContext ctx , GLenum target , GLenum pname , GLvoid * string))
   (get_programiv_ARB (:pointer :callback))     ;(void (GLIContext ctx , GLenum target , GLenum pname , GLint * params))
   (enable_vertex_attrib_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLenum pname))
   (disable_vertex_attrib_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLenum pname))
   (is_vertex_attrib_enabled_ARB (:pointer :callback));(GLboolean (GLIContext ctx , GLuint index , GLenum pname))
   (map_vertex_attrib1d_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLuint size , GLdouble u1 , GLdouble u2 , GLint stride , GLint order , const GLdouble * points))
   (map_vertex_attrib1f_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLuint size , GLfloat u1 , GLfloat u2 , GLint stride , GLint order , const GLfloat * points))
   (map_vertex_attrib2d_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLuint size , GLdouble u1 , GLdouble u2 , GLint ustride , GLint uorder , GLdouble v1 , GLdouble v2 , GLint vstride , GLint vorder , const GLdouble * points))
   (map_vertex_attrib2f_ARB (:pointer :callback));(void (GLIContext ctx , GLuint index , GLuint size , GLfloat u1 , GLfloat u2 , GLint ustride , GLint uorder , GLfloat v1 , GLfloat v2 , GLint vstride , GLint vorder , const GLfloat * points))
   (point_parameterf (:pointer :callback))      ;(void (GLIContext ctx , GLenum pname , GLfloat param))
   (point_parameterfv (:pointer :callback))     ;(void (GLIContext ctx , GLenum pname , const GLfloat * params))
   (point_parameteri (:pointer :callback))      ;(void (GLIContext ctx , GLenum pname , GLint param))
   (point_parameteriv (:pointer :callback))     ;(void (GLIContext ctx , GLenum pname , const GLint * params))
   (fog_coordf (:pointer :callback))            ;(void (GLIContext ctx , GLfloat coord))
   (fog_coordfv (:pointer :callback))           ;(void (GLIContext ctx , const GLfloat * coord))
   (fog_coordd (:pointer :callback))            ;(void (GLIContext ctx , GLdouble coord))
   (fog_coorddv (:pointer :callback))           ;(void (GLIContext ctx , const GLdouble * coord))
   (fog_coord_pointer (:pointer :callback))     ;(void (GLIContext ctx , GLenum type , GLsizei stride , const GLvoid * pointer))
   (vertex_array_parameteri_EXT (:pointer :callback));(void (GLIContext ctx , GLenum pname , GLint param))
   (bind_vertex_array_EXT (:pointer :callback)) ;(void (GLIContext ctx , GLuint id))
   (delete_vertex_arrays_EXT (:pointer :callback));(void (GLIContext ctx , GLsizei n , const GLuint * ids))
   (gen_vertex_arrays_EXT (:pointer :callback)) ;(void (GLIContext ctx , GLsizei n , GLuint * ids))
   (is_vertex_array_EXT (:pointer :callback))   ;(GLboolean (GLIContext ctx , GLuint id))
   (element_pointer_APPLE (:pointer :callback)) ;(void (GLIContext ctx , GLenum type , const GLvoid * pointer))
   (draw_element_array_APPLE (:pointer :callback));(void (GLIContext ctx , GLenum mode , GLint first , GLsizei count))
   (draw_range_element_array_APPLE (:pointer :callback));(void (GLIContext ctx , GLenum mode , GLuint start , GLuint end , GLint first , GLsizei count))
   (weightbv_ARB (:pointer :callback))          ;(void (GLIContext ctx , GLint size , const GLbyte * weights))
   (weightsv_ARB (:pointer :callback))          ;(void (GLIContext ctx , GLint size , const GLshort * weights))
   (weightiv_ARB (:pointer :callback))          ;(void (GLIContext ctx , GLint size , const GLint * weights))
   (weightfv_ARB (:pointer :callback))          ;(void (GLIContext ctx , GLint size , const GLfloat * weights))
   (weightdv_ARB (:pointer :callback))          ;(void (GLIContext ctx , GLint size , const GLdouble * weights))
   (weightubv_ARB (:pointer :callback))         ;(void (GLIContext ctx , GLint size , const GLubyte * weights))
   (weightusv_ARB (:pointer :callback))         ;(void (GLIContext ctx , GLint size , const GLushort * weights))
   (weightuiv_ARB (:pointer :callback))         ;(void (GLIContext ctx , GLint size , const GLuint * weights))
   (weight_pointer_ARB (:pointer :callback))    ;(void (GLIContext ctx , GLint size , GLenum type , GLsizei stride , const GLvoid * pointer))
   (vertex_blend_ARB (:pointer :callback))      ;(void (GLIContext ctx , GLint count))
   (multi_draw_arrays (:pointer :callback))     ;(void (GLIContext ctx , GLenum mode , const GLint * first , const GLsizei * count , GLsizei primcount))
   (multi_draw_elements (:pointer :callback))   ;(void (GLIContext ctx , GLenum mode , const GLsizei * count , GLenum type , const GLvoid ** indices , GLsizei primcount))
   (window_pos2d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble x , GLdouble y))
   (window_pos2dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * v))
   (window_pos2f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat x , GLfloat y))
   (window_pos2fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * v))
   (window_pos2i (:pointer :callback))          ;(void (GLIContext ctx , GLint x , GLint y))
   (window_pos2iv (:pointer :callback))         ;(void (GLIContext ctx , const GLint * v))
   (window_pos2s (:pointer :callback))          ;(void (GLIContext ctx , GLshort x , GLshort y))
   (window_pos2sv (:pointer :callback))         ;(void (GLIContext ctx , const GLshort * v))
   (window_pos3d (:pointer :callback))          ;(void (GLIContext ctx , GLdouble x , GLdouble y , GLdouble z))
   (window_pos3dv (:pointer :callback))         ;(void (GLIContext ctx , const GLdouble * v))
   (window_pos3f (:pointer :callback))          ;(void (GLIContext ctx , GLfloat x , GLfloat y , GLfloat z))
   (window_pos3fv (:pointer :callback))         ;(void (GLIContext ctx , const GLfloat * v))
   (window_pos3i (:pointer :callback))          ;(void (GLIContext ctx , GLint x , GLint y , GLint z))
   (window_pos3iv (:pointer :callback))         ;(void (GLIContext ctx , const GLint * v))
   (window_pos3s (:pointer :callback))          ;(void (GLIContext ctx , GLshort x , GLshort y , GLshort z))
   (window_pos3sv (:pointer :callback))         ;(void (GLIContext ctx , const GLshort * v))
   (active_stencil_face_EXT (:pointer :callback));(void (GLIContext ctx , GLenum face))
   (stencil_op_separate_ATI (:pointer :callback));(void (GLIContext ctx , GLenum face , GLenum sfail , GLenum dpfail , GLenum dppass))
   (stencil_func_separate_ATI (:pointer :callback));(void (GLIContext ctx , GLenum frontfunc , GLenum backfunc , GLint ref , GLuint mask))
   (flush_render_APPLE (:pointer :callback))    ;(void (GLIContext ctx))
   (finish_render_APPLE (:pointer :callback))   ;(void (GLIContext ctx))
   (swap_APPLE (:pointer :callback))            ;(void (GLIContext ctx))
)
(%define-record :GLIFunctionDispatch (find-record-descriptor :__GLIFUNCTIONDISPATCHREC))
; #ifdef __cplusplus
#| #|
}
#endif
|#
 |#

; #endif /* _GLIDISPATCH_H */


(provide-interface "gliDispatch")